####################################################################
# Please change the entries below up until the next comment
####################################################################
name: 'template'                              # <--- Update workflow here
env:
  TERRAFORM_FILES_PATH:   './tests'           # <--- Update example file location here
  TERRAFORM_VERSION:      '1.6.6'
  CHECKOV_SKIP_CHECKS:    ''                  # <--- (optional) Added checkov skip checks in comma-delimited format as needed
on:
  push:   
    paths:
      - '<PATH>/**.tf'                        # <--- Update path here
  pull_request:  
    paths:
      - '<PATH>/**.tf'                        # <--- Update path here
      
####################################################################
# Please leave the below entries unchanged
####################################################################
  workflow_dispatch:
    inputs:
      run_tf_apply:
        description: 'Run Terraform Apply'
        required: true
        type: boolean

permissions:
  contents: read
  issues:   write

jobs:
  # TERRAFORM PLAN
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: Terraform
    steps:
    # Checkout current repository
    - name: Checkout Current Repository
      uses: actions/checkout@v3

    # Run Terraform Plan actions
    - name: Run Terraform Plan
      uses: ./.github/actions/terraform-plan
      with:
        tf-version:                 ${{ env.TERRAFORM_VERSION }}
        gcp-storage-bucket-name:    ${{ vars.GCP_STORAGE_BUCKET_NAME }}
        gcp-storage-bucket-prefix:  ${{ vars.GCP_STORAGE_BUCKET_PREFIX }}
        gcp-service-account-id:     ${{ vars.GCP_SERVICE_ACCOUNT_ID }}
        gcp-service-account-creds:  ${{ secrets.GOOGLE_CREDENTIALS }}
        item-name:                  $GITHUB_WORKFLOW
        working-directory:          ${{ env.TERRAFORM_FILES_PATH }}
        checkov-skip-check:         ${{ env.CHECKOV_SKIP_CHECKS }}

  # MANUAL APPROVAL
  manual-approval:
    name: 'Manual Approval Gate'
    runs-on: ubuntu-latest
    needs: 'terraform-plan'
    if: ${{ inputs.run_tf_apply }} || github.event_name == 'pull_request'
    defaults:
      run:
        shell: bash
    steps:
    # Generate token from the Github App
    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ vars.GH_APP_ID }}
        private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

    # Manual approval gate with a timeout of 10 minutes
    - name: Wait for approval to Terraform Apply
      uses: trstringer/manual-approval@v1.9.0
      timeout-minutes: 10
      with:
        approvers: 'gcp_cicd_approvers'
        secret: ${{ steps.generate_token.outputs.token }}
        minimum-approvals: 1
        issue-title: 'ðŸš€ Terraform CI/CD Approval Required'
        issue-body: |
          Review and approve this run to apply the proposed QA Terraform changes
        exclude-workflow-initiator-as-approver: false
            
  # TERRAFORM APPLY
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: Terraform
    needs: 'manual-approval'
    if: ${{ inputs.run_tf_apply }} || github.event_name == 'pull_request'
    steps:
    # Checkout current repository
    - name: Checkout Current Repository
      uses: actions/checkout@v3

    # Run Terraform Apply
    - name: Run Terraform Apply
      uses: ./.github/actions/terraform-apply
      with:
        tf-version:                 ${{ env.TERRAFORM_VERSION }}
        gcp-storage-bucket-name:    ${{ vars.GCP_STORAGE_BUCKET_NAME }}
        gcp-storage-bucket-prefix:  ${{ vars.GCP_STORAGE_BUCKET_PREFIX }}
        gcp-service-account-id:     ${{ vars.GCP_SERVICE_ACCOUNT_ID }}
        gcp-service-account-creds:  ${{ secrets.GOOGLE_CREDENTIALS }}
        item-name:                  $GITHUB_WORKFLOW
        working-directory:          ${{ env.TERRAFORM_FILES_PATH }}
